\BOOKMARK [0][-]{chapter.1}{Introduction}{}% 1
\BOOKMARK [1][-]{section.1.1}{Using This Manual}{chapter.1}% 2
\BOOKMARK [0][-]{chapter.2}{Getting Started with XSB}{}% 3
\BOOKMARK [1][-]{section.2.1}{Installing XSB under UNIX}{chapter.2}% 4
\BOOKMARK [2][-]{subsection.2.1.1}{Possible Installation Problems}{section.2.1}% 5
\BOOKMARK [1][-]{section.2.2}{Installing XSB under Windows}{chapter.2}% 6
\BOOKMARK [2][-]{subsection.2.2.1}{Using Cygwin32 and Cygwin64}{section.2.2}% 7
\BOOKMARK [2][-]{subsection.2.2.2}{Using Microsoft Visual C++}{section.2.2}% 8
\BOOKMARK [1][-]{section.2.3}{Invoking XSB}{chapter.2}% 9
\BOOKMARK [1][-]{section.2.4}{Compiling XSB programs}{chapter.2}% 10
\BOOKMARK [1][-]{section.2.5}{Sample XSB Programs}{chapter.2}% 11
\BOOKMARK [1][-]{section.2.6}{Exiting XSB}{chapter.2}% 12
\BOOKMARK [0][-]{chapter.3}{System Description}{}% 13
\BOOKMARK [1][-]{section.3.1}{Entering and Exiting XSB from the Command Line}{chapter.3}% 14
\BOOKMARK [1][-]{section.3.2}{The System and its Directories}{chapter.3}% 15
\BOOKMARK [1][-]{section.3.3}{How XSB Finds Files: Source File Designators}{chapter.3}% 16
\BOOKMARK [1][-]{section.3.4}{The Module System of XSB}{chapter.3}% 17
\BOOKMARK [2][-]{subsection.3.4.1}{How the Compiler Determines the Module of a Term}{section.3.4}% 18
\BOOKMARK [2][-]{subsection.3.4.2}{Atoms and 0-Ary Structure Symbols}{section.3.4}% 19
\BOOKMARK [2][-]{subsection.3.4.3}{Dynamic Loading and How XSB Finds Code Files}{section.3.4}% 20
\BOOKMARK [2][-]{subsection.3.4.4}{Consulting a Module}{section.3.4}% 21
\BOOKMARK [2][-]{subsection.3.4.5}{Usage Inference and the Module System}{section.3.4}% 22
\BOOKMARK [2][-]{subsection.3.4.6}{Using Import to Load Usermod Source Files}{section.3.4}% 23
\BOOKMARK [2][-]{subsection.3.4.7}{Parameterized Modules in XSB}{section.3.4}% 24
\BOOKMARK [1][-]{section.3.5}{Standard Predicates in XSB}{chapter.3}% 25
\BOOKMARK [1][-]{section.3.6}{The Dynamic Loader and its Search Path}{chapter.3}% 26
\BOOKMARK [2][-]{subsection.3.6.1}{Changing the Default Search Path and the Packaging System}{section.3.6}% 27
\BOOKMARK [2][-]{subsection.3.6.2}{Dynamically loading predicates in the interpreter}{section.3.6}% 28
\BOOKMARK [1][-]{section.3.7}{Command Line Arguments}{chapter.3}% 29
\BOOKMARK [2][-]{subsection.3.7.1}{Command-line Options}{section.3.7}% 30
\BOOKMARK [2][-]{subsection.3.7.2}{General Flags}{section.3.7}% 31
\BOOKMARK [2][-]{subsection.3.7.3}{Memory Management Flags}{section.3.7}% 32
\BOOKMARK [1][-]{section.3.8}{Memory Management}{chapter.3}% 33
\BOOKMARK [1][-]{section.3.9}{Compiling, Consulting, and Loading}{chapter.3}% 34
\BOOKMARK [2][-]{subsection.3.9.1}{Static Code}{section.3.9}% 35
\BOOKMARK [2][-]{subsection.3.9.2}{Dynamic Code}{section.3.9}% 36
\BOOKMARK [2][-]{subsection.3.9.3}{The multifile directive}{section.3.9}% 37
\BOOKMARK [1][-]{section.3.10}{The Compiler}{chapter.3}% 38
\BOOKMARK [2][-]{subsection.3.10.1}{Invoking the Compiler}{section.3.10}% 39
\BOOKMARK [2][-]{subsection.3.10.2}{Compiler Options}{section.3.10}% 40
\BOOKMARK [2][-]{subsection.3.10.3}{Specialization}{section.3.10}% 41
\BOOKMARK [2][-]{subsection.3.10.4}{Compiler Directives}{section.3.10}% 42
\BOOKMARK [2][-]{subsection.3.10.5}{Conditional Compilation}{section.3.10}% 43
\BOOKMARK [2][-]{subsection.3.10.6}{Inline Predicates}{section.3.10}% 44
\BOOKMARK [1][-]{section.3.11}{A Note on ISO Compatibility}{chapter.3}% 45
\BOOKMARK [0][-]{chapter.4}{Syntax}{}% 46
\BOOKMARK [1][-]{section.4.1}{Terms}{chapter.4}% 47
\BOOKMARK [2][-]{subsection.4.1.1}{Integers}{section.4.1}% 48
\BOOKMARK [2][-]{subsection.4.1.2}{Floating-point Numbers}{section.4.1}% 49
\BOOKMARK [2][-]{subsection.4.1.3}{Atoms}{section.4.1}% 50
\BOOKMARK [2][-]{subsection.4.1.4}{Variables}{section.4.1}% 51
\BOOKMARK [2][-]{subsection.4.1.5}{Compound Terms}{section.4.1}% 52
\BOOKMARK [2][-]{subsection.4.1.6}{Lists}{section.4.1}% 53
\BOOKMARK [1][-]{section.4.2}{From HiLog to Prolog}{chapter.4}% 54
\BOOKMARK [1][-]{section.4.3}{Operators}{chapter.4}% 55
\BOOKMARK [0][-]{chapter.5}{Using Tabling in XSB: A Tutorial Introduction}{}% 56
\BOOKMARK [1][-]{section.5.1}{Tabling in the Context of a Prolog System}{chapter.5}% 57
\BOOKMARK [1][-]{section.5.2}{Definite Programs}{chapter.5}% 58
\BOOKMARK [2][-]{subsection.5.2.1}{Call Variance vs. Call Subsumption}{section.5.2}% 59
\BOOKMARK [2][-]{subsection.5.2.2}{Tabling with Interned Terms}{section.5.2}% 60
\BOOKMARK [2][-]{subsection.5.2.3}{Table Scheduling Strategies}{section.5.2}% 61
\BOOKMARK [2][-]{subsection.5.2.4}{Interaction Between Prolog Constructs and Tabling}{section.5.2}% 62
\BOOKMARK [2][-]{subsection.5.2.5}{Potential Pitfalls in Tabling}{section.5.2}% 63
\BOOKMARK [1][-]{section.5.3}{Normal Programs}{chapter.5}% 64
\BOOKMARK [2][-]{subsection.5.3.1}{Stratified Normal Programs}{section.5.3}% 65
\BOOKMARK [2][-]{subsection.5.3.2}{Non-stratified Programs}{section.5.3}% 66
\BOOKMARK [2][-]{subsection.5.3.3}{On Beyond Zebra: Implementing Other Semantics for Non-stratified Programs}{section.5.3}% 67
\BOOKMARK [1][-]{section.5.4}{Answer Subsumption}{chapter.5}% 68
\BOOKMARK [2][-]{subsection.5.4.1}{Types of Answer Subsumption}{section.5.4}% 69
\BOOKMARK [2][-]{subsection.5.4.2}{Examples of Answer Subsumption}{section.5.4}% 70
\BOOKMARK [2][-]{subsection.5.4.3}{Term-Sets}{section.5.4}% 71
\BOOKMARK [1][-]{section.5.5}{Tabling for Termination}{chapter.5}% 72
\BOOKMARK [2][-]{subsection.5.5.1}{Term Size Abstraction in XSB}{section.5.5}% 73
\BOOKMARK [2][-]{subsection.5.5.2}{Subgoal Abstraction}{section.5.5}% 74
\BOOKMARK [2][-]{subsection.5.5.3}{XSB's Approach to Bounded Rationality}{section.5.5}% 75
\BOOKMARK [1][-]{section.5.6}{Incremental Table Maintenance}{chapter.5}% 76
\BOOKMARK [2][-]{subsection.5.6.1}{Transparent Incremental Tabling}{section.5.6}% 77
\BOOKMARK [2][-]{subsection.5.6.2}{Updating in a Three-Valued Logic}{section.5.6}% 78
\BOOKMARK [2][-]{subsection.5.6.3}{Incremental Tabling using Interned Tries}{section.5.6}% 79
\BOOKMARK [2][-]{subsection.5.6.4}{Abstracting the IDG for Better Performance}{section.5.6}% 80
\BOOKMARK [2][-]{subsection.5.6.5}{Summary and Implementation Status}{section.5.6}% 81
\BOOKMARK [2][-]{subsection.5.6.6}{Predicates for Incremental Table Maintenance}{section.5.6}% 82
\BOOKMARK [1][-]{section.5.7}{Compatibility of Tabling Modes and Predicate Attributes}{chapter.5}% 83
\BOOKMARK [1][-]{section.5.8}{A Weaker Semantics for Tabling}{chapter.5}% 84
\BOOKMARK [0][-]{chapter.6}{Standard and General Predicates}{}% 85
\BOOKMARK [1][-]{section.6.1}{Input and Output}{chapter.6}% 86
\BOOKMARK [2][-]{subsection.6.1.1}{I/O Streams in XSB}{section.6.1}% 87
\BOOKMARK [2][-]{subsection.6.1.2}{Character Sets in XSB}{section.6.1}% 88
\BOOKMARK [2][-]{subsection.6.1.3}{Predicates for ISO Streams}{section.6.1}% 89
\BOOKMARK [2][-]{subsection.6.1.4}{DEC-IO Style File Handling}{section.6.1}% 90
\BOOKMARK [2][-]{subsection.6.1.5}{Character I/O}{section.6.1}% 91
\BOOKMARK [2][-]{subsection.6.1.6}{Term I/O}{section.6.1}% 92
\BOOKMARK [2][-]{subsection.6.1.7}{Special I/O}{section.6.1}% 93
\BOOKMARK [1][-]{section.6.2}{Interactions with the Operating System}{chapter.6}% 94
\BOOKMARK [2][-]{subsection.6.2.1}{The path\137sysop/2 interface}{section.6.2}% 95
\BOOKMARK [1][-]{section.6.3}{Evaluating Arithmetic Expressions through is/2}{chapter.6}% 96
\BOOKMARK [2][-]{subsection.6.3.1}{Evaluable Functors for Arithmetic Expressions}{section.6.3}% 97
\BOOKMARK [1][-]{section.6.4}{Convenience}{chapter.6}% 98
\BOOKMARK [1][-]{section.6.5}{Negation and Control}{chapter.6}% 99
\BOOKMARK [1][-]{section.6.6}{Unification and Comparison of Terms}{chapter.6}% 100
\BOOKMARK [2][-]{subsection.6.6.1}{Sorting of Terms}{section.6.6}% 101
\BOOKMARK [1][-]{section.6.7}{Meta-Logical}{chapter.6}% 102
\BOOKMARK [1][-]{section.6.8}{Cyclic Terms}{chapter.6}% 103
\BOOKMARK [2][-]{subsection.6.8.1}{Unification with and without Occurs Check}{section.6.8}% 104
\BOOKMARK [2][-]{subsection.6.8.2}{Cyclic Terms}{section.6.8}% 105
\BOOKMARK [1][-]{section.6.9}{Manipulation of Atomic Terms}{chapter.6}% 106
\BOOKMARK [1][-]{section.6.10}{All Solutions and Aggregate Predicates}{chapter.6}% 107
\BOOKMARK [1][-]{section.6.11}{Meta-Predicates}{chapter.6}% 108
\BOOKMARK [2][-]{subsection.6.11.1}{Timed Calls and Co-routining}{section.6.11}% 109
\BOOKMARK [1][-]{section.6.12}{Information about the System State}{chapter.6}% 110
\BOOKMARK [1][-]{section.6.13}{Execution State}{chapter.6}% 111
\BOOKMARK [1][-]{section.6.14}{Asserting, Retracting, and Other Database Modifications}{chapter.6}% 112
\BOOKMARK [2][-]{subsection.6.14.1}{Reading Dynamic Code from Files}{section.6.14}% 113
\BOOKMARK [2][-]{subsection.6.14.2}{The storage Module: Associative Arrays and Backtrackable Updates}{section.6.14}% 114
\BOOKMARK [1][-]{section.6.15}{Tabling Declarations and Builtins}{chapter.6}% 115
\BOOKMARK [2][-]{subsection.6.15.1}{Declaring and Modifying Tabled Predicates}{section.6.15}% 116
\BOOKMARK [2][-]{subsection.6.15.2}{Predicates for Table Inspection}{section.6.15}% 117
\BOOKMARK [2][-]{subsection.6.15.3}{Predicates for Table Inspection: Lower-level}{section.6.15}% 118
\BOOKMARK [2][-]{subsection.6.15.4}{Abolishing Tables and Table Components}{section.6.15}% 119
\BOOKMARK [2][-]{subsection.6.15.5}{Indexing using Tables}{section.6.15}% 120
\BOOKMARK [0][-]{chapter.7}{Multi-Threaded Programming in XSB}{}% 121
\BOOKMARK [1][-]{section.7.1}{Getting Started with Multi-Threading}{chapter.7}% 122
\BOOKMARK [1][-]{section.7.2}{Communication among Threads}{chapter.7}% 123
\BOOKMARK [1][-]{section.7.3}{Thread Statuses: Joinable and Detached Threads}{chapter.7}% 124
\BOOKMARK [1][-]{section.7.4}{Prolog Message Queues}{chapter.7}% 125
\BOOKMARK [1][-]{section.7.5}{Thread Cancellation and Signalling}{chapter.7}% 126
\BOOKMARK [1][-]{section.7.6}{Performance and other Considerations}{chapter.7}% 127
\BOOKMARK [1][-]{section.7.7}{Examples of Multi-Threaded Programs in XSB}{chapter.7}% 128
\BOOKMARK [1][-]{section.7.8}{Configuring the Multi-threaded Engine under Windows}{chapter.7}% 129
\BOOKMARK [1][-]{section.7.9}{Predicates for Multi-Threading}{chapter.7}% 130
\BOOKMARK [2][-]{subsection.7.9.1}{Predicates for Thread Synchronization and Communication}{section.7.9}% 131
\BOOKMARK [0][-]{chapter.8}{Storing Facts in Tries}{}% 132
\BOOKMARK [1][-]{section.8.1}{Examples of Using Tries}{chapter.8}% 133
\BOOKMARK [1][-]{section.8.2}{Space Management for Tries}{chapter.8}% 134
\BOOKMARK [1][-]{section.8.3}{Predicates for Tries}{chapter.8}% 135
\BOOKMARK [1][-]{section.8.4}{Low-level Trie Manipulation Utilities}{chapter.8}% 136
\BOOKMARK [2][-]{subsection.8.4.1}{A Low-Level API for Interned Tries}{section.8.4}% 137
\BOOKMARK [0][-]{chapter.9}{Hooks}{}% 138
\BOOKMARK [1][-]{section.9.1}{Adding and Removing Hooks}{chapter.9}% 139
\BOOKMARK [1][-]{section.9.2}{Hooks Supported by XSB}{chapter.9}% 140
\BOOKMARK [0][-]{chapter.10}{Debugging and Profiling}{}% 141
\BOOKMARK [1][-]{section.10.1}{Prolog-style Tracing and Debugging}{chapter.10}% 142
\BOOKMARK [2][-]{subsection.10.1.1}{Control of Prolog-Style Tracing and Debugging}{section.10.1}% 143
\BOOKMARK [1][-]{section.10.2}{Trace-based Execution Analysis through Forest Logging}{chapter.10}% 144
\BOOKMARK [2][-]{subsection.10.2.1}{Tracing a tabled evaluation through forest logging}{section.10.2}% 145
\BOOKMARK [2][-]{subsection.10.2.2}{Analyzing the log; seeing the forest through the trees}{section.10.2}% 146
\BOOKMARK [2][-]{subsection.10.2.3}{Discussion}{section.10.2}% 147
\BOOKMARK [2][-]{subsection.10.2.4}{Predicates for Forest Logging}{section.10.2}% 148
\BOOKMARK [1][-]{section.10.3}{Inspecting a Tabled Derivation}{chapter.10}% 149
\BOOKMARK [2][-]{subsection.10.3.1}{Inspecting Tables with table\137dump}{section.10.3}% 150
\BOOKMARK [2][-]{subsection.10.3.2}{Inspection Predicates for Dependency Graphs}{section.10.3}% 151
\BOOKMARK [2][-]{subsection.10.3.3}{Summary: Inspection Predicates}{section.10.3}% 152
\BOOKMARK [2][-]{subsection.10.3.4}{Setting Tripwires on Tabled Derivations}{section.10.3}% 153
\BOOKMARK [0][-]{chapter.11}{Definite Clause Grammars}{}% 154
\BOOKMARK [1][-]{section.11.1}{General Description}{chapter.11}% 155
\BOOKMARK [1][-]{section.11.2}{Translation of Definite Clause Grammar rules}{chapter.11}% 156
\BOOKMARK [2][-]{subsection.11.2.1}{Definite Clause Grammars and Tabling}{section.11.2}% 157
\BOOKMARK [1][-]{section.11.3}{Definite Clause Grammar predicates}{chapter.11}% 158
\BOOKMARK [1][-]{section.11.4}{Two differences with other Prologs}{chapter.11}% 159
\BOOKMARK [0][-]{chapter.12}{Exception Handling}{}% 160
\BOOKMARK [1][-]{section.12.1}{The Mechanics of Exception Handling}{chapter.12}% 161
\BOOKMARK [2][-]{subsection.12.1.1}{Exception Handling in Non-Tabled Evaluations}{section.12.1}% 162
\BOOKMARK [2][-]{subsection.12.1.2}{Exception Handling in Tabled Evaluation}{section.12.1}% 163
\BOOKMARK [1][-]{section.12.2}{XSB's Standard Format for Errors}{chapter.12}% 164
\BOOKMARK [2][-]{subsection.12.2.1}{Error Tags}{section.12.2}% 165
\BOOKMARK [2][-]{subsection.12.2.2}{XSB-Specific Information in Error Terms}{section.12.2}% 166
\BOOKMARK [1][-]{section.12.3}{Predicates to Throw and Handle Errors}{chapter.12}% 167
\BOOKMARK [2][-]{subsection.12.3.1}{Predicates to Throw Errors}{section.12.3}% 168
\BOOKMARK [2][-]{subsection.12.3.2}{Predicates used in Handling Errors}{section.12.3}% 169
\BOOKMARK [1][-]{section.12.4}{Convenience Predicates}{chapter.12}% 170
\BOOKMARK [1][-]{section.12.5}{Backtraces}{chapter.12}% 171
\BOOKMARK [0][-]{chapter.13}{Foreign Language Interface}{}% 172
\BOOKMARK [1][-]{section.13.1}{Foreign Language Modules}{chapter.13}% 173
\BOOKMARK [1][-]{section.13.2}{Lower-Level Foreign Language Interface}{chapter.13}% 174
\BOOKMARK [2][-]{subsection.13.2.1}{Context Parameters}{section.13.2}% 175
\BOOKMARK [2][-]{subsection.13.2.2}{Exchanging Basic Data Types}{section.13.2}% 176
\BOOKMARK [2][-]{subsection.13.2.3}{Exchanging Complex Data Types}{section.13.2}% 177
\BOOKMARK [1][-]{section.13.3}{Foreign Modules That Call XSB Predicates}{chapter.13}% 178
\BOOKMARK [1][-]{section.13.4}{Foreign Modules That Link Dynamically with Other Libraries}{chapter.13}% 179
\BOOKMARK [1][-]{section.13.5}{Higher-Level Foreign Language Interface}{chapter.13}% 180
\BOOKMARK [2][-]{subsection.13.5.1}{Declaration of high level foreign predicates}{section.13.5}% 181
\BOOKMARK [1][-]{section.13.6}{Compiling Foreign Modules on Windows and under Cygwin}{chapter.13}% 182
\BOOKMARK [1][-]{section.13.7}{Functions for Use in Foreign Code}{chapter.13}% 183
\BOOKMARK [0][-]{chapter.14}{Embedding XSB in a Process}{}% 184
\BOOKMARK [1][-]{section.14.1}{Calling XSB from C}{chapter.14}% 185
\BOOKMARK [1][-]{section.14.2}{Examples of Calling XSB}{chapter.14}% 186
\BOOKMARK [2][-]{subsection.14.2.1}{The XSB API for the Sequential Engine Only}{section.14.2}% 187
\BOOKMARK [2][-]{subsection.14.2.2}{The General XSB API}{section.14.2}% 188
\BOOKMARK [2][-]{subsection.14.2.3}{Managing Multiple XSB Threads through the API}{section.14.2}% 189
\BOOKMARK [2][-]{subsection.14.2.4}{Calling Multiple XSB Threads using Multiple C Threads}{section.14.2}% 190
\BOOKMARK [1][-]{section.14.3}{A C API for XSB}{chapter.14}% 191
\BOOKMARK [2][-]{subsection.14.3.1}{Initializing and Closing XSB}{section.14.3}% 192
\BOOKMARK [2][-]{subsection.14.3.2}{Passing Commands to XSB}{section.14.3}% 193
\BOOKMARK [2][-]{subsection.14.3.3}{Querying XSB}{section.14.3}% 194
\BOOKMARK [2][-]{subsection.14.3.4}{Obtaining Information about Errors}{section.14.3}% 195
\BOOKMARK [2][-]{subsection.14.3.5}{Thread Management from Calling Programs}{section.14.3}% 196
\BOOKMARK [1][-]{section.14.4}{The Variable-length String Data Type}{chapter.14}% 197
\BOOKMARK [1][-]{section.14.5}{Passing Data into an XSB Module}{chapter.14}% 198
\BOOKMARK [1][-]{section.14.6}{Creating an XSB Module that Can be Called from C}{chapter.14}% 199
\BOOKMARK [0][-]{chapter.15}{Library Utilities}{}% 200
\BOOKMARK [1][-]{section.15.1}{List Processing}{chapter.15}% 201
\BOOKMARK [2][-]{subsection.15.1.1}{Processing Comma Lists}{section.15.1}% 202
\BOOKMARK [1][-]{section.15.2}{Attributed Variables}{chapter.15}% 203
\BOOKMARK [2][-]{subsection.15.2.1}{Lowlevel Interface}{section.15.2}% 204
\BOOKMARK [1][-]{section.15.3}{constraintLib: a library for CLP}{chapter.15}% 205
\BOOKMARK [1][-]{section.15.4}{Formatted Output}{chapter.15}% 206
\BOOKMARK [1][-]{section.15.5}{Low-level Atom Manipulation Predicates}{chapter.15}% 207
\BOOKMARK [1][-]{section.15.6}{Script Writing Utilities}{chapter.15}% 208
\BOOKMARK [2][-]{subsection.15.6.1}{Communication with Subprocesses}{section.15.6}% 209
\BOOKMARK [1][-]{section.15.7}{Socket I/O}{chapter.15}% 210
\BOOKMARK [1][-]{section.15.8}{Arrays}{chapter.15}% 211
\BOOKMARK [1][-]{section.15.9}{The Profiling Library}{chapter.15}% 212
\BOOKMARK [1][-]{section.15.10}{Gensym}{chapter.15}% 213
\BOOKMARK [1][-]{section.15.11}{Random Number Generator}{chapter.15}% 214
\BOOKMARK [1][-]{section.15.12}{Loading Delimiter-Separated Files}{chapter.15}% 215
\BOOKMARK [1][-]{section.15.13}{Scanning in Prolog}{chapter.15}% 216
\BOOKMARK [1][-]{section.15.14}{XSB Lint}{chapter.15}% 217
\BOOKMARK [1][-]{section.15.15}{``Pure'' Meta-programming in XSB with prolog\137db.P}{chapter.15}% 218
\BOOKMARK [1][-]{section.15.16}{Miscellaneous Predicates}{chapter.15}% 219
\BOOKMARK [0][-]{appendix.A}{GPP - Generic Preprocessor}{}% 220
\BOOKMARK [1][-]{section.A.1}{Description}{appendix.A}% 221
\BOOKMARK [1][-]{section.A.2}{Syntax}{appendix.A}% 222
\BOOKMARK [1][-]{section.A.3}{Options}{appendix.A}% 223
\BOOKMARK [1][-]{section.A.4}{Syntax Specification}{appendix.A}% 224
\BOOKMARK [1][-]{section.A.5}{Evaluation Rules}{appendix.A}% 225
\BOOKMARK [1][-]{section.A.6}{Meta-macros}{appendix.A}% 226
\BOOKMARK [1][-]{section.A.7}{Examples}{appendix.A}% 227
\BOOKMARK [1][-]{section.A.8}{Advanced Examples}{appendix.A}% 228
\BOOKMARK [1][-]{section.A.9}{Author}{appendix.A}% 229
