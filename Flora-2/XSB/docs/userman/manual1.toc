\contentsline {chapter}{\numberline {1}Introduction}{1}{chapter.1}
\contentsline {paragraph}{Well-Founded Semantics}{3}{section*.2}
\contentsline {paragraph}{Multi-threading}{4}{section*.3}
\contentsline {paragraph}{Constraint Support}{4}{section*.4}
\contentsline {paragraph}{Indexing Methods}{4}{section*.5}
\contentsline {paragraph}{Interfaces}{5}{section*.6}
\contentsline {paragraph}{Fast Loading of Code}{5}{section*.7}
\contentsline {paragraph}{HiLog}{5}{section*.8}
\contentsline {paragraph}{Unification Factoring}{6}{section*.9}
\contentsline {paragraph}{XSB Packages}{6}{section*.10}
\contentsline {section}{\numberline {1.1}Using This Manual}{7}{section.1.1}
\contentsline {chapter}{\numberline {2}Getting Started with XSB}{8}{chapter.2}
\contentsline {section}{\numberline {2.1}Installing XSB under UNIX}{8}{section.2.1}
\contentsline {subsection}{\numberline {2.1.1}Possible Installation Problems}{12}{subsection.2.1.1}
\contentsline {section}{\numberline {2.2}Installing XSB under Windows}{13}{section.2.2}
\contentsline {subsection}{\numberline {2.2.1}Using Cygwin32 and Cygwin64}{13}{subsection.2.2.1}
\contentsline {subsection}{\numberline {2.2.2}Using Microsoft Visual C++}{14}{subsection.2.2.2}
\contentsline {section}{\numberline {2.3}Invoking XSB}{16}{section.2.3}
\contentsline {section}{\numberline {2.4}Compiling XSB programs}{17}{section.2.4}
\contentsline {section}{\numberline {2.5}Sample XSB Programs}{17}{section.2.5}
\contentsline {section}{\numberline {2.6}Exiting XSB}{19}{section.2.6}
\contentsline {chapter}{\numberline {3}System Description}{20}{chapter.3}
\contentsline {section}{\numberline {3.1}Entering and Exiting XSB from the Command Line}{20}{section.3.1}
\contentsline {section}{\numberline {3.2}The System and its Directories}{21}{section.3.2}
\contentsline {section}{\numberline {3.3}How XSB Finds Files: Source File Designators}{22}{section.3.3}
\contentsline {section}{\numberline {3.4}The Module System of XSB}{24}{section.3.4}
\contentsline {subsection}{\numberline {3.4.1}How the Compiler Determines the Module of a Term}{28}{subsection.3.4.1}
\contentsline {subsection}{\numberline {3.4.2}Atoms and 0-Ary Structure Symbols}{29}{subsection.3.4.2}
\contentsline {subsection}{\numberline {3.4.3}Dynamic Loading and How XSB Finds Code Files}{30}{subsection.3.4.3}
\contentsline {subsection}{\numberline {3.4.4}Consulting a Module}{30}{subsection.3.4.4}
\contentsline {subsection}{\numberline {3.4.5}Usage Inference and the Module System}{31}{subsection.3.4.5}
\contentsline {subsection}{\numberline {3.4.6}Using Import to Load Usermod Source Files}{31}{subsection.3.4.6}
\contentsline {subsection}{\numberline {3.4.7}Parameterized Modules in XSB}{32}{subsection.3.4.7}
\contentsline {section}{\numberline {3.5}Standard Predicates in XSB}{35}{section.3.5}
\contentsline {section}{\numberline {3.6}The Dynamic Loader and its Search Path}{35}{section.3.6}
\contentsline {subsection}{\numberline {3.6.1}Changing the Default Search Path and the Packaging System}{36}{subsection.3.6.1}
\contentsline {subsection}{\numberline {3.6.2}Dynamically loading predicates in the interpreter}{39}{subsection.3.6.2}
\contentsline {section}{\numberline {3.7}Command Line Arguments}{40}{section.3.7}
\contentsline {subsection}{\numberline {3.7.1}Command-line Options}{41}{subsection.3.7.1}
\contentsline {subsection}{\numberline {3.7.2}General Flags}{42}{subsection.3.7.2}
\contentsline {subsection}{\numberline {3.7.3}Memory Management Flags}{44}{subsection.3.7.3}
\contentsline {section}{\numberline {3.8}Memory Management}{45}{section.3.8}
\contentsline {section}{\numberline {3.9}Compiling, Consulting, and Loading}{47}{section.3.9}
\contentsline {subsection}{\numberline {3.9.1}Static Code}{47}{subsection.3.9.1}
\contentsline {subsection}{\numberline {3.9.2}Dynamic Code}{48}{subsection.3.9.2}
\contentsline {subsection}{\numberline {3.9.3}The multifile directive}{49}{subsection.3.9.3}
\contentsline {section}{\numberline {3.10}The Compiler}{50}{section.3.10}
\contentsline {subsection}{\numberline {3.10.1}Invoking the Compiler}{50}{subsection.3.10.1}
\contentsline {subsection}{\numberline {3.10.2}Compiler Options}{52}{subsection.3.10.2}
\contentsline {paragraph}{\it Special considerations for using XSB as a preprocessor.}{56}{section*.14}
\contentsline {subsection}{\numberline {3.10.3}Specialization}{60}{subsection.3.10.3}
\contentsline {subsection}{\numberline {3.10.4}Compiler Directives}{62}{subsection.3.10.4}
\contentsline {subsubsection}{Including Files in a Compilation}{63}{section*.15}
\contentsline {subsection}{\numberline {3.10.5}Conditional Compilation}{63}{subsection.3.10.5}
\contentsline {subsubsection}{Mode Declarations}{64}{section*.16}
\contentsline {subsubsection}{Tabling Directives}{66}{section*.17}
\contentsline {subsubsection}{Indexing Directives}{68}{section*.18}
\contentsline {subsubsection}{Unification Factoring}{69}{section*.19}
\contentsline {subsubsection}{Other Directives}{70}{section*.20}
\contentsline {subsection}{\numberline {3.10.6}Inline Predicates}{70}{subsection.3.10.6}
\contentsline {section}{\numberline {3.11}A Note on ISO Compatibility}{71}{section.3.11}
\contentsline {chapter}{\numberline {4}Syntax}{73}{chapter.4}
\contentsline {section}{\numberline {4.1}Terms}{73}{section.4.1}
\contentsline {subsection}{\numberline {4.1.1}Integers}{73}{subsection.4.1.1}
\contentsline {subsubsection}{ISO Integers}{73}{section*.21}
\contentsline {subsubsection}{Other Integer Representations}{74}{section*.22}
\contentsline {subsection}{\numberline {4.1.2}Floating-point Numbers}{75}{subsection.4.1.2}
\contentsline {subsection}{\numberline {4.1.3}Atoms}{75}{subsection.4.1.3}
\contentsline {subsection}{\numberline {4.1.4}Variables}{77}{subsection.4.1.4}
\contentsline {subsection}{\numberline {4.1.5}Compound Terms}{77}{subsection.4.1.5}
\contentsline {subsection}{\numberline {4.1.6}Lists}{79}{subsection.4.1.6}
\contentsline {section}{\numberline {4.2}From HiLog to Prolog}{80}{section.4.2}
\contentsline {section}{\numberline {4.3}Operators}{82}{section.4.3}
\contentsline {chapter}{\numberline {5}Using Tabling in XSB: A Tutorial Introduction}{86}{chapter.5}
\contentsline {section}{\numberline {5.1}Tabling in the Context of a Prolog System}{87}{section.5.1}
\contentsline {section}{\numberline {5.2}Definite Programs}{87}{section.5.2}
\contentsline {paragraph}{Exercises}{89}{section*.23}
\contentsline {subsection}{\numberline {5.2.1}Call Variance vs. Call Subsumption}{91}{subsection.5.2.1}
\contentsline {paragraph}{Determining Call Similarity via Variance}{92}{section*.26}
\contentsline {paragraph}{Determining Call Similarity via Subsumption}{92}{section*.27}
\contentsline {paragraph}{Declarations for Call Variance and Call Subsumption}{94}{section*.28}
\contentsline {subsection}{\numberline {5.2.2}Tabling with Interned Terms}{94}{subsection.5.2.2}
\contentsline {subsection}{\numberline {5.2.3}Table Scheduling Strategies}{95}{subsection.5.2.3}
\contentsline {subsection}{\numberline {5.2.4}Interaction Between Prolog Constructs and Tabling}{97}{subsection.5.2.4}
\contentsline {paragraph}{Cuts and Tabling}{98}{section*.29}
\contentsline {paragraph}{Call Subumption and Meta-Logical Predicates}{100}{section*.30}
\contentsline {subsection}{\numberline {5.2.5}Potential Pitfalls in Tabling}{100}{subsection.5.2.5}
\contentsline {paragraph}{Over-Tabling}{100}{section*.31}
\contentsline {paragraph}{Tabled Predicates and Tracing}{101}{section*.32}
\contentsline {section}{\numberline {5.3}Normal Programs}{102}{section.5.3}
\contentsline {subsection}{\numberline {5.3.1}Stratified Normal Programs}{102}{subsection.5.3.1}
\contentsline {subsection}{\numberline {5.3.2}Non-stratified Programs}{106}{subsection.5.3.2}
\contentsline {paragraph}{When Conditional Answers are Needed}{108}{section*.36}
\contentsline {paragraph}{Programming in the Well-founded Semantics}{109}{section*.37}
\contentsline {subsection}{\numberline {5.3.3}On Beyond Zebra: Implementing Other Semantics for Non-stratified Programs}{110}{subsection.5.3.3}
\contentsline {section}{\numberline {5.4}Answer Subsumption}{113}{section.5.4}
\contentsline {subsection}{\numberline {5.4.1}Types of Answer Subsumption}{113}{subsection.5.4.1}
\contentsline {subsubsection}{Partial Order Answer Subsumption.}{113}{section*.41}
\contentsline {subsubsection}{Lattice Answer Subsumption.}{114}{section*.42}
\contentsline {subsubsection}{Partial Order Answer Subsumption with Abstraction.}{115}{section*.43}
\contentsline {subsection}{\numberline {5.4.2}Examples of Answer Subsumption}{115}{subsection.5.4.2}
\contentsline {subsubsection}{Answer Subsumption and Abstract Interpretation}{115}{section*.44}
\contentsline {subsubsection}{Scalability for multi-valued and quantitative logics}{117}{section*.45}
\contentsline {subsection}{\numberline {5.4.3}Term-Sets}{118}{subsection.5.4.3}
\contentsline {section}{\numberline {5.5}Tabling for Termination}{122}{section.5.5}
\contentsline {paragraph}{An Infinite Number of Subgoals}{123}{section*.46}
\contentsline {subsection}{\numberline {5.5.1}Term Size Abstraction in XSB}{124}{subsection.5.5.1}
\contentsline {subsection}{\numberline {5.5.2}Subgoal Abstraction}{125}{subsection.5.5.2}
\contentsline {subsubsection}{Declaring Subgoal Abstraction}{126}{section*.48}
\contentsline {subsection}{\numberline {5.5.3}XSB's Approach to Bounded Rationality}{126}{subsection.5.5.3}
\contentsline {subsubsection}{Radial Restraint Through Answer Abstraction}{127}{section*.49}
\contentsline {subsubsection}{Answer CountRestraint}{129}{section*.51}
\contentsline {subsubsection}{Justifying or Explaining Restraint}{130}{section*.53}
\contentsline {section}{\numberline {5.6}Incremental Table Maintenance}{130}{section.5.6}
\contentsline {subsection}{\numberline {5.6.1}Transparent Incremental Tabling}{131}{subsection.5.6.1}
\contentsline {subsubsection}{View Consistency}{133}{section*.54}
\contentsline {subsection}{\numberline {5.6.2}Updating in a Three-Valued Logic}{133}{subsection.5.6.2}
\contentsline {subsubsection}{Declaring Predicates to be Incremental}{134}{section*.55}
\contentsline {subsection}{\numberline {5.6.3}Incremental Tabling using Interned Tries}{135}{subsection.5.6.3}
\contentsline {subsection}{\numberline {5.6.4}Abstracting the IDG for Better Performance}{136}{subsection.5.6.4}
\contentsline {subsection}{\numberline {5.6.5}Summary and Implementation Status}{138}{subsection.5.6.5}
\contentsline {subsection}{\numberline {5.6.6}Predicates for Incremental Table Maintenance}{138}{subsection.5.6.6}
\contentsline {paragraph}{A Note on Terminology}{138}{section*.56}
\contentsline {paragraph}{Declarations}{138}{section*.57}
\contentsline {paragraph}{Basic Incremental Maintenance Predicates}{139}{section*.58}
\contentsline {paragraph}{Incremental Maintenance using Interned Tries}{141}{section*.59}
\contentsline {paragraph}{Inspecting the State of the Incremental Dependency Graph}{141}{section*.60}
\contentsline {section}{\numberline {5.7}Compatibility of Tabling Modes and Predicate Attributes}{144}{section.5.7}
\contentsline {section}{\numberline {5.8}A Weaker Semantics for Tabling}{144}{section.5.8}
\contentsline {paragraph}{Examples}{147}{section*.61}
\contentsline {chapter}{\numberline {6}Standard and General Predicates}{148}{chapter.6}
\contentsline {section}{\numberline {6.1}Input and Output}{148}{section.6.1}
\contentsline {subsection}{\numberline {6.1.1}I/O Streams in XSB}{148}{subsection.6.1.1}
\contentsline {subsubsection}{I/O Stream Implementation}{150}{section*.62}
\contentsline {subsection}{\numberline {6.1.2}Character Sets in XSB}{151}{subsection.6.1.2}
\contentsline {subsection}{\numberline {6.1.3}Predicates for ISO Streams}{151}{subsection.6.1.3}
\contentsline {subsubsection}{Other Predicates using ISO Streams}{157}{section*.63}
\contentsline {subsection}{\numberline {6.1.4}DEC-IO Style File Handling}{158}{subsection.6.1.4}
\contentsline {subsection}{\numberline {6.1.5}Character I/O}{161}{subsection.6.1.5}
\contentsline {subsection}{\numberline {6.1.6}Term I/O}{167}{subsection.6.1.6}
\contentsline {subsubsection}{Term Writing to Designated I/O Streams}{175}{section*.64}
\contentsline {subsection}{\numberline {6.1.7}Special I/O}{176}{subsection.6.1.7}
\contentsline {section}{\numberline {6.2}Interactions with the Operating System}{182}{section.6.2}
\contentsline {subsection}{\numberline {6.2.1}The {\tt path\_sysop/2} interface}{186}{subsection.6.2.1}
\contentsline {section}{\numberline {6.3}Evaluating Arithmetic Expressions through {\tt is/2}}{188}{section.6.3}
\contentsline {subsection}{\numberline {6.3.1}Evaluable Functors for Arithmetic Expressions}{189}{subsection.6.3.1}
\contentsline {subsubsection}{Mathematical Functions from {\tt math.h}}{192}{section*.65}
\contentsline {section}{\numberline {6.4}Convenience}{193}{section.6.4}
\contentsline {section}{\numberline {6.5}Negation and Control}{193}{section.6.5}
\contentsline {section}{\numberline {6.6}Unification and Comparison of Terms}{198}{section.6.6}
\contentsline {subsection}{\numberline {6.6.1}Sorting of Terms}{203}{subsection.6.6.1}
\contentsline {section}{\numberline {6.7}Meta-Logical}{205}{section.6.7}
\contentsline {section}{\numberline {6.8}Cyclic Terms}{220}{section.6.8}
\contentsline {subsection}{\numberline {6.8.1}Unification with and without Occurs Check}{220}{subsection.6.8.1}
\contentsline {subsection}{\numberline {6.8.2}Cyclic Terms}{221}{subsection.6.8.2}
\contentsline {section}{\numberline {6.9}Manipulation of Atomic Terms}{223}{section.6.9}
\contentsline {section}{\numberline {6.10}All Solutions and Aggregate Predicates}{236}{section.6.10}
\contentsline {section}{\numberline {6.11}Meta-Predicates}{241}{section.6.11}
\contentsline {subsection}{\numberline {6.11.1}Timed Calls and Co-routining}{246}{subsection.6.11.1}
\contentsline {subsubsection}{Interpreter Indicess}{247}{section*.66}
\contentsline {subsubsection}{Timed Call and related predicates}{247}{section*.67}
\contentsline {section}{\numberline {6.12}Information about the System State}{252}{section.6.12}
\contentsline {paragraph}{Flags Pertaining to Multi-Threading}{261}{section*.69}
\contentsline {section}{\numberline {6.13}Execution State}{271}{section.6.13}
\contentsline {section}{\numberline {6.14}Asserting, Retracting, and Other Database Modifications}{281}{section.6.14}
\contentsline {subsection}{\numberline {6.14.1}Reading Dynamic Code from Files}{292}{subsection.6.14.1}
\contentsline {subsection}{\numberline {6.14.2}The {\tt storage} Module: Associative Arrays and Backtrackable Updates}{296}{subsection.6.14.2}
\contentsline {subsubsection}{Non-backtrackable Storage}{296}{section*.70}
\contentsline {subsubsection}{Backtrackable Updates}{297}{section*.71}
\contentsline {subsubsection}{Reclaiming Space}{298}{section*.72}
\contentsline {section}{\numberline {6.15}Tabling Declarations and Builtins}{298}{section.6.15}
\contentsline {subsection}{\numberline {6.15.1}Declaring and Modifying Tabled Predicates}{299}{subsection.6.15.1}
\contentsline {subsection}{\numberline {6.15.2}Predicates for Table Inspection}{302}{subsection.6.15.2}
\contentsline {subsection}{\numberline {6.15.3}Predicates for Table Inspection: Lower-level}{309}{subsection.6.15.3}
\contentsline {subsection}{\numberline {6.15.4}Abolishing Tables and Table Components}{314}{subsection.6.15.4}
\contentsline {paragraph}{Abolishing a Table that is being Computed}{314}{section*.77}
\contentsline {paragraph}{View Consistency and Table Garbage Collection}{314}{section*.78}
\contentsline {paragraph}{Maintenance of the Residual Program}{315}{section*.79}
\contentsline {paragraph}{Abolishing Incremental Tab;es}{316}{section*.80}
\contentsline {paragraph}{Multiple Threads}{317}{section*.81}
\contentsline {subsubsection}{Table Deletion Predicates}{317}{section*.82}
\contentsline {subsection}{\numberline {6.15.5}Indexing using Tables}{323}{subsection.6.15.5}
\contentsline {chapter}{\numberline {7}Multi-Threaded Programming in XSB}{326}{chapter.7}
\contentsline {section}{\numberline {7.1}Getting Started with Multi-Threading}{326}{section.7.1}
\contentsline {paragraph}{Hello World for Beginners}{327}{section*.83}
\contentsline {section}{\numberline {7.2}Communication among Threads}{328}{section.7.2}
\contentsline {section}{\numberline {7.3}Thread Statuses: Joinable and Detached Threads}{331}{section.7.3}
\contentsline {section}{\numberline {7.4}Prolog Message Queues}{333}{section.7.4}
\contentsline {section}{\numberline {7.5}Thread Cancellation and Signalling}{335}{section.7.5}
\contentsline {section}{\numberline {7.6}Performance and other Considerations}{337}{section.7.6}
\contentsline {section}{\numberline {7.7}Examples of Multi-Threaded Programs in XSB}{337}{section.7.7}
\contentsline {section}{\numberline {7.8}Configuring the Multi-threaded Engine under Windows}{338}{section.7.8}
\contentsline {section}{\numberline {7.9}Predicates for Multi-Threading}{341}{section.7.9}
\contentsline {subsection}{\numberline {7.9.1}Predicates for Thread Synchronization and Communication}{348}{subsection.7.9.1}
\contentsline {subsubsection}{Prolog Message Queues}{348}{section*.84}
\contentsline {subsubsection}{User-defined Mutexes}{351}{section*.85}
\contentsline {chapter}{\numberline {8}Storing Facts in Tries}{356}{chapter.8}
\contentsline {section}{\numberline {8.1}Examples of Using Tries}{358}{section.8.1}
\contentsline {section}{\numberline {8.2}Space Management for Tries}{359}{section.8.2}
\contentsline {section}{\numberline {8.3}Predicates for Tries}{360}{section.8.3}
\contentsline {section}{\numberline {8.4}Low-level Trie Manipulation Utilities}{367}{section.8.4}
\contentsline {subsection}{\numberline {8.4.1}A Low-Level API for Interned Tries}{367}{subsection.8.4.1}
\contentsline {chapter}{\numberline {9}Hooks}{371}{chapter.9}
\contentsline {section}{\numberline {9.1}Adding and Removing Hooks}{371}{section.9.1}
\contentsline {section}{\numberline {9.2}Hooks Supported by XSB}{372}{section.9.2}
\contentsline {chapter}{\numberline {10}Debugging and Profiling}{374}{chapter.10}
\contentsline {section}{\numberline {10.1}Prolog-style Tracing and Debugging}{374}{section.10.1}
\contentsline {subsection}{\numberline {10.1.1}Control of Prolog-Style Tracing and Debugging}{379}{subsection.10.1.1}
\contentsline {section}{\numberline {10.2}Trace-based Execution Analysis through Forest Logging}{380}{section.10.2}
\contentsline {subsection}{\numberline {10.2.1}Tracing a tabled evaluation through forest logging}{381}{subsection.10.2.1}
\contentsline {subsection}{\numberline {10.2.2}Analyzing the log; seeing the forest through the trees}{387}{subsection.10.2.2}
\contentsline {subsubsection}{Using abstraction in the analysis}{390}{section*.86}
\contentsline {subsubsection}{Analyzing Negation}{391}{section*.87}
\contentsline {subsection}{\numberline {10.2.3}Discussion}{394}{subsection.10.2.3}
\contentsline {subsection}{\numberline {10.2.4}Predicates for Forest Logging}{394}{subsection.10.2.4}
\contentsline {section}{\numberline {10.3}Inspecting a Tabled Derivation}{395}{section.10.3}
\contentsline {subsection}{\numberline {10.3.1}Inspecting Tables with {\tt table\_dump}}{396}{subsection.10.3.1}
\contentsline {subsection}{\numberline {10.3.2}Inspection Predicates for Dependency Graphs}{399}{subsection.10.3.2}
\contentsline {subsubsection}{A Prolog Format for Dependency Graphs}{400}{section*.88}
\contentsline {subsubsection}{Predicates to Access the Subgoal Dependency Graph}{401}{section*.89}
\contentsline {subsubsection}{Predicates to Access the Incremental Dependency Graph}{403}{section*.90}
\contentsline {subsubsection}{Predicates to Access the Residual Dependency Graph}{404}{section*.91}
\contentsline {subsubsection}{Filtering, Manipulating, and Summarizing Dependency Graphs}{408}{section*.92}
\contentsline {subsection}{\numberline {10.3.3}Summary: Inspection Predicates}{412}{subsection.10.3.3}
\contentsline {subsection}{\numberline {10.3.4}Setting Tripwires on Tabled Derivations}{413}{subsection.10.3.4}
\contentsline {subsubsection}{Tripwires Based on Resource Limits}{414}{section*.93}
\contentsline {paragraph}{Guidelines for Analysis of Resource-based Tripwires}{414}{section*.94}
\contentsline {subsubsection}{Tripwires Based on Properties of a Tabled Derivation}{416}{section*.95}
\contentsline {subsubsection}{The Suspend Action for Flag-Based Tripwires}{419}{section*.96}
\contentsline {subsubsection}{Summary of Flag-Based Tripwires}{420}{section*.97}
\contentsline {chapter}{\numberline {11}Definite Clause Grammars}{423}{chapter.11}
\contentsline {section}{\numberline {11.1}General Description}{423}{section.11.1}
\contentsline {section}{\numberline {11.2}Translation of Definite Clause Grammar rules}{425}{section.11.2}
\contentsline {subsection}{\numberline {11.2.1}Definite Clause Grammars and Tabling}{427}{subsection.11.2.1}
\contentsline {section}{\numberline {11.3}Definite Clause Grammar predicates}{428}{section.11.3}
\contentsline {section}{\numberline {11.4}Two differences with other Prologs}{432}{section.11.4}
\contentsline {chapter}{\numberline {12}Exception Handling}{434}{chapter.12}
\contentsline {section}{\numberline {12.1}The Mechanics of Exception Handling}{434}{section.12.1}
\contentsline {subsection}{\numberline {12.1.1}Exception Handling in Non-Tabled Evaluations}{434}{subsection.12.1.1}
\contentsline {subsection}{\numberline {12.1.2}Exception Handling in Tabled Evaluation}{439}{subsection.12.1.2}
\contentsline {subsubsection}{Obtaining Information about a Tabled Computation after an Exception is Thrown}{441}{section*.98}
\contentsline {section}{\numberline {12.2}XSB's Standard Format for Errors}{441}{section.12.2}
\contentsline {subsection}{\numberline {12.2.1}Error Tags}{442}{subsection.12.2.1}
\contentsline {subsection}{\numberline {12.2.2}XSB-Specific Information in Error Terms}{443}{subsection.12.2.2}
\contentsline {section}{\numberline {12.3}Predicates to Throw and Handle Errors}{444}{section.12.3}
\contentsline {subsection}{\numberline {12.3.1}Predicates to Throw Errors}{444}{subsection.12.3.1}
\contentsline {subsection}{\numberline {12.3.2}Predicates used in Handling Errors}{446}{subsection.12.3.2}
\contentsline {section}{\numberline {12.4}Convenience Predicates}{447}{section.12.4}
\contentsline {section}{\numberline {12.5}Backtraces}{449}{section.12.5}
\contentsline {chapter}{\numberline {13}Foreign Language Interface}{451}{chapter.13}
\contentsline {section}{\numberline {13.1}Foreign Language Modules}{452}{section.13.1}
\contentsline {section}{\numberline {13.2}Lower-Level Foreign Language Interface}{453}{section.13.2}
\contentsline {subsection}{\numberline {13.2.1}Context Parameters}{457}{subsection.13.2.1}
\contentsline {subsection}{\numberline {13.2.2}Exchanging Basic Data Types}{458}{subsection.13.2.2}
\contentsline {subsection}{\numberline {13.2.3}Exchanging Complex Data Types}{459}{subsection.13.2.3}
\contentsline {section}{\numberline {13.3}Foreign Modules That Call XSB Predicates}{470}{section.13.3}
\contentsline {section}{\numberline {13.4}Foreign Modules That Link Dynamically with Other Libraries}{471}{section.13.4}
\contentsline {section}{\numberline {13.5}Higher-Level Foreign Language Interface}{473}{section.13.5}
\contentsline {subsection}{\numberline {13.5.1}Declaration of high level foreign predicates}{473}{subsection.13.5.1}
\contentsline {section}{\numberline {13.6}Compiling Foreign Modules on Windows and under Cygwin}{476}{section.13.6}
\contentsline {section}{\numberline {13.7}Functions for Use in Foreign Code}{477}{section.13.7}
\contentsline {chapter}{\numberline {14}Embedding XSB in a Process}{480}{chapter.14}
\contentsline {section}{\numberline {14.1}Calling XSB from C}{481}{section.14.1}
\contentsline {section}{\numberline {14.2}Examples of Calling XSB}{482}{section.14.2}
\contentsline {subsection}{\numberline {14.2.1}The XSB API for the Sequential Engine Only}{482}{subsection.14.2.1}
\contentsline {subsubsection}{An Example using Fixed Strings}{486}{section*.99}
\contentsline {subsection}{\numberline {14.2.2}The General XSB API}{486}{subsection.14.2.2}
\contentsline {subsection}{\numberline {14.2.3}Managing Multiple XSB Threads through the API}{490}{subsection.14.2.3}
\contentsline {subsection}{\numberline {14.2.4}Calling Multiple XSB Threads using Multiple C Threads}{492}{subsection.14.2.4}
\contentsline {subsubsection}{Protected and Non-Protected API Functions}{492}{section*.100}
\contentsline {section}{\numberline {14.3}A C API for XSB}{494}{section.14.3}
\contentsline {subsection}{\numberline {14.3.1}Initializing and Closing XSB}{494}{subsection.14.3.1}
\contentsline {subsection}{\numberline {14.3.2}Passing Commands to XSB}{496}{subsection.14.3.2}
\contentsline {subsection}{\numberline {14.3.3}Querying XSB}{497}{subsection.14.3.3}
\contentsline {subsection}{\numberline {14.3.4}Obtaining Information about Errors}{502}{subsection.14.3.4}
\contentsline {subsection}{\numberline {14.3.5}Thread Management from Calling Programs}{503}{subsection.14.3.5}
\contentsline {section}{\numberline {14.4}The Variable-length String Data Type}{504}{section.14.4}
\contentsline {section}{\numberline {14.5}Passing Data into an XSB Module}{506}{section.14.5}
\contentsline {section}{\numberline {14.6}Creating an XSB Module that Can be Called from C}{507}{section.14.6}
\contentsline {paragraph}{Unix instructions:}{507}{section*.101}
\contentsline {paragraph}{Windows instructions:}{508}{section*.102}
\contentsline {chapter}{\numberline {15}Library Utilities}{509}{chapter.15}
\contentsline {section}{\numberline {15.1}List Processing}{509}{section.15.1}
\contentsline {subsection}{\numberline {15.1.1}Processing Comma Lists}{512}{subsection.15.1.1}
\contentsline {section}{\numberline {15.2}Attributed Variables}{512}{section.15.2}
\contentsline {subsection}{\numberline {15.2.1}Lowlevel Interface}{513}{subsection.15.2.1}
\contentsline {section}{\numberline {15.3}{\tt constraintLib}: a library for CLP}{517}{section.15.3}
\contentsline {section}{\numberline {15.4}Formatted Output}{519}{section.15.4}
\contentsline {section}{\numberline {15.5}Low-level Atom Manipulation Predicates}{522}{section.15.5}
\contentsline {section}{\numberline {15.6}Script Writing Utilities}{524}{section.15.6}
\contentsline {subsection}{\numberline {15.6.1}Communication with Subprocesses}{525}{subsection.15.6.1}
\contentsline {paragraph}{{\em Important notes about spawned processes\/}:}{528}{section*.103}
\contentsline {paragraph}{\em Notes:}{531}{section*.104}
\contentsline {section}{\numberline {15.7}Socket I/O}{533}{section.15.7}
\contentsline {paragraph}{General socket calls.}{534}{section*.105}
\contentsline {paragraph}{Buffered, message-based communication.}{535}{section*.106}
\contentsline {paragraph}{Stream-oriented, character-at-a-time interface.}{537}{section*.107}
\contentsline {paragraph}{Socket-probing.}{537}{section*.108}
\contentsline {paragraph}{Error codes.}{538}{section*.109}
\contentsline {paragraph}{Timeouts.}{538}{section*.110}
\contentsline {paragraph}{Buffered, stream-oriented communication.}{539}{section*.111}
\contentsline {section}{\numberline {15.8}Arrays}{540}{section.15.8}
\contentsline {section}{\numberline {15.9}The Profiling Library}{541}{section.15.9}
\contentsline {section}{\numberline {15.10}Gensym}{544}{section.15.10}
\contentsline {section}{\numberline {15.11}Random Number Generator}{544}{section.15.11}
\contentsline {section}{\numberline {15.12}Loading Delimiter-Separated Files}{546}{section.15.12}
\contentsline {section}{\numberline {15.13}Scanning in Prolog}{547}{section.15.13}
\contentsline {section}{\numberline {15.14}XSB Lint}{548}{section.15.14}
\contentsline {section}{\numberline {15.15}``Pure'' Meta-programming in XSB with prolog\_db.P}{550}{section.15.15}
\contentsline {section}{\numberline {15.16}Miscellaneous Predicates}{552}{section.15.16}
\contentsline {chapter}{\numberline {A}GPP - Generic Preprocessor}{554}{appendix.A}
\contentsline {section}{\numberline {A.1}Description}{554}{section.A.1}
\contentsline {section}{\numberline {A.2}Syntax}{555}{section.A.2}
\contentsline {section}{\numberline {A.3}Options}{555}{section.A.3}
\contentsline {section}{\numberline {A.4}Syntax Specification}{559}{section.A.4}
\contentsline {section}{\numberline {A.5}Evaluation Rules}{563}{section.A.5}
\contentsline {section}{\numberline {A.6}Meta-macros}{564}{section.A.6}
\contentsline {section}{\numberline {A.7}Examples}{569}{section.A.7}
\contentsline {section}{\numberline {A.8}Advanced Examples}{574}{section.A.8}
\contentsline {section}{\numberline {A.9}Author}{576}{section.A.9}
